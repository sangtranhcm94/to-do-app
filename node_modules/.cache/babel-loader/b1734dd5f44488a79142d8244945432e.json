{"ast":null,"code":"import _objectSpread from \"/Users/jamsosmac/data_SAP_laptop/SangTran_OneDrive/S_MyProjects/React/to-do-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jamsosmac/data_SAP_laptop/SangTran_OneDrive/S_MyProjects/React/to-do-list/src/TodoList.js\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nexport default class TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.addTodo = todo => {\n      this.setState({\n        todos: [todo, ...this.state.todos]\n      });\n    };\n\n    this.handleDelete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          // debugger;\n          if (todo.id === id) {\n            return _objectSpread({}, todo, {\n              isDeleted: true\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.handleToggleDone = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            return _objectSpread({}, todo, {\n              done: !todo.done\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"show done\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"show done\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"show done\"), this.state.todos.map(todo => todo.isDeleted ? '' : React.createElement(List, {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Todo, {\n      todo: todo,\n      deleteTodo: () => this.handleDelete(todo.id),\n      toggleDone: () => this.handleToggleDone(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jamsosmac/data_SAP_laptop/SangTran_OneDrive/S_MyProjects/React/to-do-list/src/TodoList.js"],"names":["React","List","TodoForm","Todo","TodoList","Component","state","todos","addTodo","todo","setState","handleDelete","id","map","isDeleted","handleToggleDone","done","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDC,KADoD,GAC5C;AACNC,MAAAA,KAAK,EAAE;AADD,KAD4C;;AAAA,SAIpDC,OAJoD,GAI1CC,IAAI,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAACE,IAAD,EAAO,GAAG,KAAKH,KAAL,CAAWC,KAArB;AADK,OAAd;AAGD,KARmD;;AAAA,SAUpDI,YAVoD,GAUrCC,EAAE,IAAI;AACnB,WAAKF,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqBJ,IAAI,IAAI;AAClC;AACA,cAAIA,IAAI,CAACG,EAAL,KAAYA,EAAhB,EAAoB;AAChB,qCACOH,IADP;AAEIK,cAAAA,SAAS,EAAE;AAFf;AAIH,WALD,MAKO;AACL,mBAAOL,IAAP;AACD;AACF,SAVM;AADK,OAAd;AAaD,KAxBmD;;AAAA,SA0BpDM,gBA1BoD,GA0BjCH,EAAE,IAAI;AACvB,WAAKF,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqBJ,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACG,EAAL,KAAYA,EAAhB,EAAoB;AAChB,qCACOH,IADP;AAEIO,cAAAA,IAAI,EAAE,CAACP,IAAI,CAACO;AAFhB;AAIH,WALD,MAKO;AACL,mBAAOP,IAAP;AACD;AACF,SATM;AADK,OAAd;AAYD,KAvCmD;AAAA;;AAyCpDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKK,KAAKF,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqBJ,IAAI,IAElBA,IAAI,CAACK,SAAL,GAAiB,EAAjB,GACA,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEL,IAAI,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,UAAU,EAAE,MAAM,KAAKE,YAAL,CAAkBF,IAAI,CAACG,EAAvB,CAFpB;AAGE,MAAA,UAAU,EAAE,MAAM,KAAKG,gBAAL,CAAsBN,IAAI,CAACG,EAA3B,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAHP,CALL,CADF;AAoBD;;AA9DmD","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nexport default class TodoList extends React.Component {\n  state = {\n    todos: []\n  };\n  addTodo = todo => {\n    this.setState({\n      todos: [todo, ...this.state.todos]\n    });\n  };\n\n  handleDelete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        // debugger;\n        if (todo.id === id) {\n            return { \n                ...todo, \n                isDeleted: true \n            };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n  \n  handleToggleDone = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n            return { \n                ...todo, \n                done: !todo.done \n            };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <TodoForm onSubmit={this.addTodo} />\n        <button >show done</button>\n        <button >show done</button>\n        <button >show done</button>\n          {this.state.todos.map(todo => (\n              (\n                  todo.isDeleted ? '' :\n                  <List key={todo.id}>\n                  <Todo\n                    todo={todo}\n                    deleteTodo={() => this.handleDelete(todo.id)}\n                    toggleDone={() => this.handleToggleDone(todo.id)}\n                  />\n                  </List>\n              )\n          ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}